Parfait üòé Je vais te donner **un guide complet et pr√™t √† copier-coller** pour g√©rer ton projet Git/GitHub, **du premier d√©p√¥t aux mises √† jour futures**.

---

# ‚ö° GUIDE GIT / GITHUB ‚Äì LIGNE DE COMMANDE

### 1Ô∏è‚É£ Initialiser le projet et faire le premier commit

Depuis le dossier de ton projet (`C:\Users\nanod\desktop\cointer` ou autre) :

```bash
# Se placer dans le dossier du projet
cd C:\Users\nanod\desktop\cointer

# Initialiser le d√©p√¥t Git local
git init

# Ajouter tous les fichiers au suivi de Git
git add .

# Faire le premier commit
git commit -m "Premier commit : ajout de mon application d‚Äôexercices"
```

---

### 2Ô∏è‚É£ Cr√©er le d√©p√¥t sur GitHub

1. Aller sur [https://github.com/new](https://github.com/new)
2. Nom du d√©p√¥t : `co_intervention` (ou ton choix)
3. Laisser **Public** ou **Private**
4. Ne pas cocher **README**, **.gitignore**, ni licence
5. Cliquer sur **Create repository**

Tu auras alors une URL comme :

```
https://github.com/DjamelBMN/co_intervention.git
```

---

### 3Ô∏è‚É£ Lier le d√©p√¥t local √† GitHub

```bash
# Supprimer un ancien remote si n√©cessaire
git remote remove origin

# Ajouter le remote vers ton d√©p√¥t GitHub
git remote add origin https://github.com/DjamelBMN/co_intervention.git

# Renommer la branche principale en 'main' (recommand√©)
git branch -M main

# Envoyer ton projet sur GitHub
git push -u origin main
```

üí° √Ä ce moment, Git peut demander de **t‚Äôauthentifier via le navigateur**. C‚Äôest normal.

---

### 4Ô∏è‚É£ Mettre √† jour le projet sur GitHub apr√®s modification du code

Chaque fois que tu modifies ton projet et veux pousser les changements :

```bash
# V√©rifier l'√©tat du d√©p√¥t
git status

# Ajouter les fichiers modifi√©s au suivi
git add .

# Cr√©er un commit avec un message descriptif
git commit -m "Description de la modification"

# Envoyer les modifications sur GitHub
git push origin main
```

üí° **Conseil :**

* `git status` ‚Üí montre quels fichiers ont chang√©
* `git add fichier` ‚Üí ajoute uniquement un fichier sp√©cifique
* `git add .` ‚Üí ajoute **tous** les fichiers modifi√©s

---

### 5Ô∏è‚É£ R√©cup√©rer les mises √† jour depuis GitHub (si tu travailles sur plusieurs machines)

```bash
git pull origin main
```

* Toujours faire un `git pull` avant de commencer √† travailler, pour √©viter les conflits.

---

### ‚úÖ R√©sum√© rapide des commandes principales

| Action                               | Commande                                                         |
| ------------------------------------ | ---------------------------------------------------------------- |
| Initialiser d√©p√¥t local              | `git init`                                                       |
| Ajouter fichiers                     | `git add .`                                                      |
| Premier commit                       | `git commit -m "message"`                                        |
| Lier √† GitHub                        | `git remote add origin URL`                                      |
| Renommer branche principale          | `git branch -M main`                                             |
| Envoyer sur GitHub                   | `git push -u origin main`                                        |
| Ajouter et commit apr√®s modification | `git add .` ‚Üí `git commit -m "message"` ‚Üí `git push origin main` |
| R√©cup√©rer les mises √† jour           | `git pull origin main`                                           |

---

Si tu veux, je peux te cr√©er **un mini-script pr√™t √† copier-coller** pour **initialiser un projet GitHub avec toutes ces √©tapes automatiquement**, √ßa √©vite de tout taper √† chaque fois.

Veux‚Äëtu que je fasse √ßa‚ÄØ?



# --- CONFIGURATION --- #
# Remplace ces valeurs par les tiennes
$NomProjetLocal = "cointer"                    # Nom du dossier local
$NomDepotGitHub = "co_intervention"           # Nom du d√©p√¥t GitHub
$UtilisateurGitHub = "DjamelBMN"              # Ton pseudo GitHub
$EmailGit = "djamel.benmakhlouf@gmail.com"    # Ton email Git

# --- CHEMIN DU PROJET --- #
Set-Location "C:\Users\nanod\desktop\$NomProjetLocal"

# --- INITIALISER GIT LOCAL --- #
git init

# Configurer l'utilisateur Git (global)
git config --global user.name $UtilisateurGitHub
git config --global user.email $EmailGit

# Ajouter tous les fichiers et faire le premier commit
git add .
git commit -m "Premier commit : ajout de mon projet $NomProjetLocal"

# --- LIER LE DEPOT GITHUB --- #
git remote remove origin 2>$null      # Supprime l'ancien remote si existant
git remote add origin https://github.com/$UtilisateurGitHub/$NomDepotGitHub.git

# Renommer la branche principale
git branch -M main

# --- PUSH INITIAL --- #
git push -u origin main






                    **Script pour mettre √† jour ton d√©p√¥t apr√®s modification**




# Se placer dans le dossier du projet
Set-Location "C:\Users\nanod\desktop\cointer"

# V√©rifier l'√©tat des fichiers
git status

# Ajouter tous les fichiers modifi√©s
git add .

# Cr√©er un commit avec un message descriptif
git commit -m "Description de la modification"

# Envoyer les changements sur GitHub
git push origin main
